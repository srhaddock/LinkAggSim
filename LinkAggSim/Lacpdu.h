/*
Copyright 2017 Stephen Haddock Consulting, LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

#pragma once
// #include "Frame.h"
#include "Mac.h"
// #include "Aggregator.h"
#include "AggPort.h"

// class AggPort;

/*
*     The Link Aggregation Control Protocol Data Unit (Lacpdu) class inherits the Sdu base class.  An Lacdpu 
*         object is generated by the LACP Transmit State Machine (LacpTxSM) of an AggPort in a LinkAgg shim,
*         propagated in Frame objects, and consumed by the LACP Receive State Machine (LacpRxSM).
*/

class Lacpdu : public Sdu
{

public:
	Lacpdu();
	~Lacpdu();

	static const Lacpdu& getLacpdu(Frame& LacpFrame);      // Returns a constant reference to the Lacpdu

	unsigned char VersionNumber;

	sysId actorSystem;
	unsigned short actorKey;
	portId actorPort;                                            // Port Priority and Port Number 
    LacpPortState actorState;

	sysId partnerSystem;
	unsigned short partnerKey;
	portId partnerPort;
	LacpPortState partnerState;

	unsigned short collectorMaxDelay;

	/**/
	// Version 2 TLVs
	//     Port Algorithm TLV
	bool portAlgorithmTlv;
	Aggregator::portAlgorithms actorPortAlgorithm;

	//     Port Conversation ID Digest TLV
	bool portConversationIdDigestTlv;
	unsigned short linkNumberID;
	std::array<unsigned char, 16> actorConversationLinkListDigest;

	//     Port Conversation Service Mapping TLV (Only present when Service ID is different from Conversation ID)
	bool portConversationServiceMappingDigestTlv;
	std::array<unsigned char, 16> actorConversationServiceMappingDigest;

	//     Port Conversation Mask TLVs (Only present in long LACPDU exchanges)
	bool portConversationMaskTlvs;
	AggPortConversationMaskState actorPortConversationMaskState;
	std::bitset<4096> actorPortConversationMask;
	/**/
};

